@model Roomax.Models.Room

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Room</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Capacity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Capacity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Capacity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedAt, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreatedAt, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserID, "Utilisateur", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CategoryID, "Catégorie", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sauvegarder" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<hr />

@foreach (var file in Model.Files)
{
    <img src="data:@file.ContentType;base64,@Convert.ToBase64String(file.Content)" width="80" height="80" />
    <a href="@Url.Action("DeleteFile","Rooms", new { id=file.ID })" class="btn btn-info">Supprimer</a>
}


<form id="formAddFile" action="@Url.Action("Addfile","Rooms")" method="post" enctype="multipart/form-data">
    @Html.HiddenFor(model => model.ID)
    <div class="form-group">
        <label class="control-label col-md-2">Fichier</label>
        <input id="upload" type="file" value="" name="upload" class="form-control" />
        <button type="submit" class="btn btn-warning">Ajouter le fichier</button>
    </div>

</form>

<div>
    @Html.ActionLink("Retour à la liste", "Index")
</div>

@section SectionScripts{
    <script src="~/Scripts/tinymce/tinymce.min.js"></script>
    <script>
        tinymce.init({ selector: "#Description" })
    </script>
    @*<script>
                $(document).ready(function() {
                    $("#formAddFile").submit(function (ev) {
                        ev.preventDefault();
                        if ($("#upload").get(0).files.length === 0) {
                            window.alert("Aucun fichier de sélectionné");
                        }
                        else {
                            var url = "/backoffice/rooms/addfiles?id=" + @Model.ID + "&upload=" + ;
                            window.location.href = url;
                        }

        })
                });
            </script>*@

}
